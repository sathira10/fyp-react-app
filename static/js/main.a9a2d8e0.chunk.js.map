{"version":3,"sources":["components/main/About.js","components/main/Nav.js","components/workspace/popups/SaveDialog.js","components/workspace/popups/OpenDIalog.js","components/workspace/Datasheet.js","components/workspace/Results.js","components/workspace/Images.js","components/workspace/popups/SerialDialog.js","components/workspace/Emulate.js","components/main/Workspace.js","theme.js","App.js","index.js"],"names":["About","React","useState","open","setOpen","handleClose","IconButton","edge","color","onClick","fontSize","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Nav","classes","AppBar","position","className","Toolbar","Typography","variant","SaveDialog","props","panelName","setName","Save","aria-labelledby","TextField","margin","label","type","onChange","event","target","value","console","log","fullWidth","a","update","values","data","JSON","stringify","get","blob","Blob","dataURL","window","URL","createObjectURL","tempLink","document","createElement","href","download","click","OpenDialog","setFieldValue","component","OpenInBrowser","accept","e","preventDefault","reader","FileReader","onload","text","result","module_data","parse","isc","voc","imp","vmp","n_ser","alpha","beta","cell_type","readAsText","files","hidden","ModuleData","setParams","ranges","FormControl","enableReinitialize","initialValues","c","g","onSubmit","setSubmitting","setTimeout","formData","FormData","append","axios","post","then","response","submitForm","isSubmitting","Grid","justify","alignItems","container","item","Box","name","helperText","select","InputLabelProps","shrink","map","option","MenuItem","pt","direction","ButtonGroup","disabled","Results","bp","CustomCard","params","iph","description","io","rs","rsh","Card","CardContent","gutterBottom","Images","iv","pv","ivx","Boolean","process","pvx","src","aspectRatio","SerialDialog","Emulate","getSerial","setSerial","Workspace","state","serial","serData","setState","update_data","update_params","parameters","get_data","images","iv_curve","pv_curve","port","connected","style","width","Paper","display","elevation","p","Datasheet","this","Component","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a9a2d8e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\nimport {IconButton} from \"@material-ui/core\";\r\n\r\n\r\nexport default function About() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClickOpen}>\r\n                <WbSunnyIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"alert-dialog-title\">{\"About\"}</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        This is the about text\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Dismiss\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {AppBar, Toolbar, IconButton, Typography} from \"@material-ui/core\";\r\nimport {makeStyles, Tooltip} from \"@material-ui/core\";\r\n\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport InputIcon from '@material-ui/icons/Input';\r\n\r\n\r\nimport About from \"./About\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n\r\nexport default function Nav() {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" className=\"Nav\">\r\n            <Toolbar>\r\n\r\n\r\n\r\n                <About/>\r\n\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    CONTROL PANEL\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Save} from \"@material-ui/icons\";\r\nimport {IconButton} from \"@material-ui/core\";\r\n\r\n\r\nexport default function SaveDialog(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    let [panelName, setName] = React.useState('panel')\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleNameChange = (event) => {\r\n        setName(event.target.value);\r\n        console.log(panelName);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                <Save fontSize=\"large\"/>\r\n            </IconButton>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Save</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label=\"pv module name\"\r\n                        type=\"text\"\r\n                        onChange={handleNameChange}\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={async () => {\r\n                        await (props.update(props.values));\r\n                        const data = JSON.stringify(props.get());\r\n                        const blob = new Blob([data], {type: 'application/popups;charset=utf-8'});\r\n                        const dataURL = window.URL.createObjectURL(blob);\r\n                        let tempLink = document.createElement('a');\r\n                        tempLink.href = dataURL;\r\n                        tempLink.download = `${panelName}.json`;\r\n                        tempLink.click();\r\n                        setName(\"panel\");\r\n                        setOpen(false)\r\n                    }} color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import {IconButton} from \"@material-ui/core\";\r\nimport {OpenInBrowser} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nexport default function OpenDialog(props){\r\n\r\n    const setFieldValue = props.setFieldValue;\r\n    return(\r\n        <IconButton\r\n            component=\"label\"\r\n            variant=\"outlined\"\r\n            color=\"primary\">\r\n            <OpenInBrowser fontSize=\"large\"/>\r\n            <input type=\"file\" accept=\".json\" onChange={\r\n                async (e) => {\r\n                    e.preventDefault()\r\n                    const reader = new FileReader()\r\n                    reader.onload = async (e) => {\r\n                        const text = (e.target.result)\r\n                        let module_data = JSON.parse(text);\r\n                        console.log(module_data);\r\n                        setFieldValue('isc', module_data.isc)\r\n                        setFieldValue('voc', module_data.voc)\r\n                        setFieldValue('imp', module_data.imp)\r\n                        setFieldValue('vmp', module_data.vmp)\r\n                        setFieldValue('n_ser', module_data.n_ser)\r\n                        setFieldValue('alpha', module_data.alpha)\r\n                        setFieldValue('beta', module_data.beta)\r\n                        setFieldValue('c', 25)\r\n                        setFieldValue('g', 1000)\r\n                        setFieldValue('cell_type', module_data.cell_type)\r\n\r\n\r\n                    };\r\n                    reader.readAsText(e.target.files[0])\r\n                }\r\n            } hidden/>\r\n        </IconButton>\r\n    )\r\n}","import {Box, FormControl, Typography, Button, MenuItem, Grid, ButtonGroup} from \"@material-ui/core\";\r\nimport {Formik, Form, Field} from 'formik';\r\nimport {TextField} from 'formik-material-ui';\r\nimport SaveDialog from \"./popups/SaveDialog\";\r\nimport OpenDialog from \"./popups/OpenDIalog\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction ModuleData(props) {\r\n\r\n    const update = props.update\r\n    const get = props.get\r\n    const setParams = props.setParams\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    const showFile = async (e) => {\r\n        e.preventDefault()\r\n        const reader = new FileReader()\r\n        reader.onload = async (e) => {\r\n            const text = (e.target.result)\r\n            let module_data = JSON.parse(text);\r\n            console.log(module_data);\r\n\r\n        };\r\n        reader.readAsText(e.target.files[0])\r\n    }\r\n\r\n    const ranges = [\r\n        {\r\n            value: 'monoSi',\r\n            label: 'Mono crystalline Silicon',\r\n        },\r\n        {\r\n            value: 'multiSi/polySi',\r\n            label: 'Multi crystalline Silicon',\r\n        }\r\n    ];\r\n\r\n\r\n    // const saveData = () => {\r\n    //     update(ref.current.values);\r\n    //     const data = JSON.stringify(get());\r\n    //     console.log(data)\r\n    //\r\n\r\n\r\n    // }\r\n    return (\r\n\r\n        <FormControl>\r\n\r\n            <Typography variant=\"h5\">Photovoltaic Module Data</Typography>\r\n\r\n            <Formik\r\n\r\n                enableReinitialize={true}\r\n                initialValues={{\r\n                    isc: '',\r\n                    voc: '',\r\n                    imp: '',\r\n                    vmp: '',\r\n                    alpha: '',\r\n                    beta: '',\r\n                    n_ser: '',\r\n                    c: '',\r\n                    g: '',\r\n                    cell_type: '',\r\n                }}\r\n\r\n                onSubmit={(values, {setSubmitting}) => {\r\n                    setTimeout(() => {\r\n                        setSubmitting(false);\r\n                        update(values);\r\n\r\n                        let formData = new FormData();\r\n                        formData.append(\"isc\", get().isc)\r\n                        formData.append(\"voc\", get().voc)\r\n                        formData.append(\"imp\", get().imp)\r\n                        formData.append(\"vmp\", get().vmp)\r\n                        formData.append(\"n_ser\", get().n_ser)\r\n                        formData.append(\"alpha\", get().alpha)\r\n                        formData.append(\"beta\", get().beta)\r\n                        formData.append(\"c\", get().c)\r\n                        formData.append(\"g\", get().g)\r\n                        formData.append(\"cell_type\", get().cell_type)\r\n\r\n                        axios.post(\"http://127.0.0.1:5000/api/param_ext\",formData)\r\n                            .then(response => setParams(response.data))\r\n                    }, 500);\r\n                }}\r\n            >\r\n                {({submitForm, isSubmitting, setFieldValue, values}) => (\r\n                    <div>\r\n                        <Grid justify=\"center\" alignItems=\"center\">\r\n                            <Form>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item>\r\n\r\n\r\n                                        <Box margin={1}>\r\n                                            <Field\r\n                                                component={TextField}\r\n                                                name=\"isc\"\r\n                                                type=\"number\"\r\n                                                label={<span>I<sub>sc</sub></span>}\r\n                                                helperText=\"Short circuit current (Amps)\"\r\n                                            />\r\n                                        </Box>\r\n                                        <Box margin={1}>\r\n                                            <Field\r\n                                                component={TextField}\r\n                                                name=\"voc\"\r\n                                                type=\"number\"\r\n                                                label={<span>V<sub>oc</sub></span>}\r\n                                                helperText=\"Open circuit voltage (Volts)\"\r\n                                            />\r\n                                        </Box>\r\n\r\n\r\n                                        <Box margin={1}>\r\n                                            <Field\r\n                                                component={TextField}\r\n                                                name=\"imp\"\r\n                                                type=\"number\"\r\n                                                label={<span>I<sub>mp</sub></span>}\r\n                                                helperText=\"Max power point current (Amps)\"\r\n                                            />\r\n                                        </Box>\r\n                                        <Box margin={1}>\r\n                                            <Field\r\n                                                component={TextField}\r\n                                                name=\"vmp\"\r\n                                                type=\"number\"\r\n                                                label={<span>V<sub>mp</sub></span>}\r\n                                                helperText=\"Max power point voltage (Volts)\"\r\n                                            />\r\n                                        </Box>\r\n\r\n                                        <Box margin={1}>\r\n                                            <Field\r\n                                                component={TextField}\r\n                                                name=\"n_ser\"\r\n                                                type=\"number\"\r\n                                                label=\"N\"\r\n                                                helperText=\"Number of cells in series\"\r\n                                            />\r\n                                        </Box>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <Box margin={1}>\r\n                                            <Field\r\n                                                component={TextField}\r\n                                                name=\"alpha\"\r\n                                                type=\"number\"\r\n                                                label={<span>&alpha;</span>}\r\n                                                helperText={<span>Temp coef of Isc (Amps/&deg;C)</span>}\r\n                                            />\r\n                                        </Box>\r\n\r\n                                        <Box margin={1}>\r\n                                            <Field\r\n                                                component={TextField}\r\n                                                name=\"beta\"\r\n                                                type=\"number\"\r\n                                                label={<span>&beta;</span>}\r\n                                                helperText={<span>Temp coef of Voc (Volts/&deg;C)</span>}\r\n                                            />\r\n                                        </Box>\r\n\r\n                                        <Box margin={1}>\r\n                                            <Field\r\n                                                component={TextField}\r\n                                                name=\"c\"\r\n                                                type=\"number\"\r\n                                                label=\"T\"\r\n                                                helperText={<span>Temperature (&deg;C)</span>}\r\n                                            />\r\n                                        </Box>\r\n\r\n                                        <Box margin={1}>\r\n                                            <Field\r\n                                                component={TextField}\r\n                                                name=\"g\"\r\n                                                type=\"number\"\r\n                                                label=\"G\"\r\n                                                helperText={<span>Irradiance level (Watts/m<sup>2</sup>)</span>}\r\n                                            />\r\n                                        </Box>\r\n\r\n\r\n                                        <Box margin={1}>\r\n                                            <Field\r\n                                                component={TextField}\r\n                                                type=\"text\"\r\n                                                name=\"cell_type\"\r\n                                                select\r\n                                                variant=\"standard\"\r\n                                                helperText=\"Select material\"\r\n                                                margin=\"normal\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                            >\r\n                                                {ranges.map((option) => (\r\n                                                    <MenuItem key={option.value} value={option.value}>\r\n                                                        {option.label}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Field>\r\n                                        </Box>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                            </Form>\r\n\r\n\r\n                        </Grid>\r\n\r\n                        <Box pt={2}>\r\n                            <Grid\r\n\r\n                                direction=\"row\"\r\n                                justify=\"space-between\"\r\n                                className=\"content\"\r\n                            >\r\n                                <ButtonGroup >\r\n\r\n                                    <OpenDialog\r\n                                        setFieldValue={setFieldValue}>\r\n                                    </OpenDialog>\r\n\r\n                                    <SaveDialog\r\n                                        values={values}\r\n                                        update={update}\r\n                                        get={get}>\r\n                                    </SaveDialog>\r\n\r\n\r\n                                </ButtonGroup>\r\n\r\n                                <ButtonGroup >\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={isSubmitting}\r\n                                        onClick={submitForm}\r\n                                    >\r\n                                        Calculate\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Grid>\r\n                        </Box>\r\n\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </FormControl>\r\n    )\r\n\r\n}\r\n\r\nexport default ModuleData;\r\n","import React from 'react';\r\nimport {CardContent, Typography, Card, makeStyles, Box, Button, Grid, ButtonGroup} from \"@material-ui/core\";\r\n\r\n\r\n// useStyles = makeStyles({\r\n//     root: {\r\n//         minWidth: 275,\r\n//     },\r\n//     bullet: {\r\n//         display: 'inline-block',\r\n//         margin: '0 2px',\r\n//         transform: 'scale(0.8)',\r\n//     },\r\n//     title: {\r\n//         fontSize: 14,\r\n//     },\r\n//     pos: {\r\n//         marginBottom: 12,\r\n//     },\r\n// });\r\n\r\n\r\nexport default function Results(props) {\r\n\r\n    // const  classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <Box pt={3} bp={3}>\r\n                        <CustomCard\r\n                            name={<span>I<sub>ph</sub></span>}\r\n                            value={props.params.iph}\r\n                            description=\"Photo current (A)\"/>\r\n                    </Box>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <Box pt={3} bp={3}>\r\n                        <CustomCard\r\n                            name={<span>I<sub>o</sub></span>}\r\n                            value={props.params.io}\r\n                            description=\"Saturation current (A)\"/>\r\n                    </Box>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <Box pt={3} bp={3}>\r\n                        <CustomCard\r\n                            name=\"A\"\r\n                            value={props.params.a}\r\n                            description=\"Diode ideality factor\"/>\r\n                    </Box>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <Box pt={3} bp={3}>\r\n                        <CustomCard\r\n                            name={<span>R<sub>sh</sub></span>}\r\n                            value={props.params.rs}\r\n                            description={<span>Series resistance{<span> (&Omega;)</span>}</span>}/>\r\n                    </Box>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <Box pt={3} bp={3}>\r\n                        <CustomCard\r\n                            name={<span>R<sub>s</sub></span>}\r\n                            value={props.params.rsh}\r\n                            description={<span>Shunt resistance{<span> (&Omega;)</span>}</span>}/>\r\n                    </Box>\r\n                </div>\r\n\r\n                {/*<div className=\"col-md-4\">*/}\r\n                {/*    <Box pt={3} bp={3}>*/}\r\n                {/*        <CustomCard*/}\r\n                {/*            name={<span>V<sub>th</sub></span>}*/}\r\n                {/*            value=\"0\"*/}\r\n                {/*            unit=\"\"*/}\r\n                {/*            description=\"Thermal voltage (mV)\"/>*/}\r\n                {/*    </Box>*/}\r\n                {/*</div>*/}\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nfunction CustomCard(props) {\r\n    return (\r\n        <Card>\r\n\r\n\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    {props.name}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\" className=\"force-select\">\r\n                    {props.value}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                    {props.description}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n\r\n                </Typography>\r\n            </CardContent>\r\n\r\n        </Card>\r\n    )\r\n}\r\n","import Image from 'material-ui-image'\r\n\r\nexport default function Images(props) {\r\n\r\n    const iv = props.iv\r\n    const pv = props.pv\r\n\r\n    const ivx = Boolean(iv) ? iv : process.env.PUBLIC_URL + '/default_img.png'\r\n    const pvx = Boolean(pv) ? iv : process.env.PUBLIC_URL + '/default_img.png'\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className='row'>\r\n            <div className=\"col-md-6\">\r\n                <Image src={ivx} aspectRatio=\"(16/9)\"/>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <Image src={pvx} aspectRatio=\"(16/9)\"/>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import TuneIcon from \"@material-ui/icons/Tune\";\r\nimport {IconButton} from \"@material-ui/core\";\r\n\r\nexport default function SerialDialog(){\r\n    return(\r\n        <IconButton>\r\n            <TuneIcon fontSize=\"large\" color=\"secondary\"/>\r\n        </IconButton>\r\n    )\r\n}","import {Box, Button, Grid, IconButton} from \"@material-ui/core\";\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport SerialDialog from \"./popups/SerialDialog\";\r\nimport React from \"react\";\r\n\r\nexport default function Emulate(props) {\r\n    return (\r\n        <Box pt={2}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"right\"\r\n                className=\"content\"\r\n            >\r\n                <div>\r\n                    <SerialDialog getSerial={props.getSerial} setSerial={props.setSerial}/>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\">\r\n                        Emulate\r\n                    </Button>\r\n                </div>\r\n            </Grid>\r\n        </Box>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {Box, Paper} from \"@material-ui/core\";\r\n\r\nimport Datasheet from \"../workspace/Datasheet\";\r\nimport Results from \"../workspace/Results\";\r\nimport Images from \"../workspace/Images\";\r\nimport Emulate from \"../workspace/Emulate\";\r\n\r\nclass Workspace extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {\r\n                isc: '',\r\n                voc: '',\r\n                imp: '',\r\n                vmp: '',\r\n                alpha: '',\r\n                beta: '',\r\n                n_ser: '',\r\n                c: '',\r\n                g: '',\r\n                cell_type: '',\r\n            },\r\n            parameters: {\r\n                iph: '0',\r\n                io: '0',\r\n                rs: '0',\r\n                rsh: '0',\r\n                a: '0',\r\n            },\r\n            images: {\r\n                iv_curve: process.env.PUBLIC_URL + '/default_img.png',\r\n                pv_curve: process.env.PUBLIC_URL + '/default_img.png',\r\n            },\r\n            serial: {\r\n                port: \"COM4\",\r\n                connected: false\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getSerial = () => {\r\n        return (this.state.serial)\r\n    }\r\n\r\n    setSerial = (serData) => {\r\n        this.setState({serial: serData});\r\n    }\r\n\r\n    update_data = (data) => {\r\n        this.setState({data: data})\r\n    }\r\n\r\n    update_params = (params) => {\r\n        this.setState({parameters: params})\r\n    }\r\n\r\n    get_data = () => {\r\n        return (this.state.data);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid mb-2\" style={{width: \"90%\"}}>\r\n                <div className=\"row d-flex\">\r\n                    <div className=\"col-lg-5 justify-content-center\">\r\n                        <Box pt={4}>\r\n                            <Paper display=\"flex\" elevation={4}>\r\n                                <Box p={3}>\r\n                                    <Datasheet update={this.update_data} get={this.get_data} setParams={this.update_params}/>\r\n                                </Box>\r\n                            </Paper>\r\n                        </Box>\r\n                    </div>\r\n                    <div className=\"col-lg-7\">\r\n                        <Box pt={4}>\r\n\r\n                            <Box>\r\n                                <Images iv={this.state.iv_curve} pv={this.state.pv_curve}/>\r\n                            </Box>\r\n                            <Box>\r\n                                <Results params={this.state.parameters}/>\r\n                            </Box>\r\n                            <Box>\r\n                                <Emulate getSerial={this.getSerial} setSerial={this.setSerial}/>\r\n                            </Box>\r\n\r\n                        </Box>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Workspace;","import {createMuiTheme} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            // light: will be calculated from palette.primary.main,\r\n            main: '#1261A0',\r\n            // dark: will be calculated from palette.primary.main,\r\n            // contrastText: will be calculated to contrast with palette.primary.main\r\n        },\r\n\r\n        secondary:{\r\n            main: '#943541'\r\n        }\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import {ThemeProvider} from '@material-ui/core'\r\n\r\nimport Nav from \"./components/main/Nav\";\r\nimport Workspace from \"./components/main/Workspace\";\r\nimport theme from './theme'\r\n\r\nimport 'bootstrap/dist/css/bootstrap-reboot.css'\r\nimport 'bootstrap/dist/css/bootstrap-grid.css'\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={theme}>\r\n                <Nav/>\r\n                <Workspace/>\r\n            </ThemeProvider>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}